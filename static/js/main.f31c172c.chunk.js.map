{"version":3,"sources":["App.tsx","components/GoodsList/GoodsList.tsx","index.tsx"],"names":["SortType","GoodsList","goods","map","good","goodsFromServer","App","useState","NONE","sortType","setSortType","isReversed","setIsReversed","allGoods","visibleGoods","sort","goodOne","goodTwo","ALPABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","classNames","onClick","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,0ECbQC,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC3C,OACE,6BACGA,EAAMC,KACL,SAACC,GAAD,OACE,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,SDLrBC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGL,K,YAAAA,E,mBAAAA,E,iBAAAA,M,KAmCE,IAAMM,EAAgB,WAC3B,MAAgCC,mBAASP,EAASQ,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KAEMC,EA5BD,SACLX,EADK,GAGJ,IADCO,EACF,EADEA,SAAUE,EACZ,EADYA,WAENG,EAAY,YAAOZ,GAiBzB,OAfAY,EAAaC,MAAK,SAACC,EAASC,GAC1B,OAAQR,GACN,KAAKT,EAASkB,QACZ,OAAOF,EAAQG,cAAcF,GAC/B,KAAKjB,EAASoB,OACZ,OAAOJ,EAAQK,OAASJ,EAAQI,OAClC,QACE,OAAO,MAITV,GACFG,EAAaQ,UAGRR,EAOUS,CACflB,EAAiB,CAAEI,WAAUE,eAG/B,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,iBACpB,CACE,WAAYjB,IAAaT,EAASkB,UAEtCS,QAAS,kBAAMjB,EAAYV,EAASkB,UANtC,iCAWA,wBACEO,KAAK,SACLD,UAAWE,IAAW,oBACpB,CACE,WAAYjB,IAAaT,EAASoB,SAEtCO,QAAS,kBAAMjB,EAAYV,EAASoB,SANtC,4BAWA,wBACEK,KAAK,SACLD,UAAWE,IAAW,oBACpB,CACE,YAAaf,IAEjBgB,QAAS,kBAAMf,GAAeD,IANhC,qBAUCA,GAAcF,IAAaT,EAASQ,KAEjC,wBACEiB,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPf,GAAc,GACdF,EAAYV,EAASQ,OALzB,mBAWA,QAIN,6BACE,cAAC,EAAD,CAAWN,MAAOW,UEhH1Be,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f31c172c.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport { GoodsList } from './components/GoodsList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE = 'NONE',\n  ALPABET = 'ALPHABET',\n  LENGTH = 'LENGTH',\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((goodOne, goodTwo) => {\n    switch (sortType) {\n      case SortType.ALPABET:\n        return goodOne.localeCompare(goodTwo);\n      case SortType.LENGTH:\n        return goodOne.length - goodTwo.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const allGoods = getReorderedGoods(\n    goodsFromServer, { sortType, isReversed },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames('button is-info',\n            {\n              'is-light': sortType !== SortType.ALPABET,\n            })}\n          onClick={() => setSortType(SortType.ALPABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-success',\n            {\n              'is-light': sortType !== SortType.LENGTH,\n            })}\n          onClick={() => setSortType(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-warning',\n            {\n              'is-light': !isReversed,\n            })}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n        {isReversed || sortType !== SortType.NONE\n          ? (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => {\n                setIsReversed(false);\n                setSortType(SortType.NONE);\n              }}\n            >\n              Reset\n            </button>\n          )\n          : null}\n\n      </div>\n\n      <ul>\n        <GoodsList goods={allGoods} />\n      </ul>\n    </div>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  goods: string[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => {\n  return (\n    <ul>\n      {goods.map(\n        (good) => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ),\n      )}\n    </ul>\n  );\n};\n\nexport default React.memo(GoodsList);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}